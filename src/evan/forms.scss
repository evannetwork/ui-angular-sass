/*
  Copyright (C) 2018-present evan GmbH.

  This program is free software: you can redistribute it and/or modify it
  under the terms of the GNU Affero General Public License, version 3,
  as published by the Free Software Foundation.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Affero General Public License for more details.

  You should have received a copy of the GNU Affero General Public License
  along with this program. If not, see http://www.gnu.org/licenses/ or
  write to the Free Software Foundation, Inc., 51 Franklin Street,
  Fifth Floor, Boston, MA, 02110-1301 USA, or download the license from
  the following URL: https://evan.network/license/

  You can be released from the requirements of the GNU Affero General Public
  License by purchasing a commercial license.
  Buying such a license is mandatory as soon as you use this software or parts
  of it on other blockchains than evan.network.

  For more information, please contact evan GmbH at this address:
  https://evan.network/license/
*/

@import '../variables/colors';
@import '../variables/positions';

ion-item ion-label[stacked], ion-item ion-label[floating], ion-label.standalone, button[ion-item] ion-label[stacked], button[ion-item] ion-label[floating] {
  margin: 24px 8px 8px 0 !important;
}

ion-label {
  &, h1, h2, h3, h4, h5, span {
    font-weight: 400 !important;
  }

  &.standalone {
    font-size: 14px;
    font-weight: 600 !important;
  }
}

ion-item, button[ion-item] {
  padding-left: 0 !important;

  &.item-input, &.item-datetime, &.item-range, &.item-label-stacked {
    ion-label {
      &, h1, h2, h3, h4, h5, span {
        font-weight: 600 !important;
      }
    }
  }

  ion-input, ion-select {
    *, .select-text {
      font-size: 14px;
    }
  }

  ion-datetime {
    height: 35px;
    padding: 8px 0 7px 0 !important;

    .datetime-text {
      font-size: 14px;
    }
  }

  ion-textarea {
    textarea {
      font-size: 14px;
    }
  }
}

form {
  position: relative;

  ion-item.item-md, button[ion-item] {
    padding-left: 0;
  }

  ion-list {
    ion-item.item-md, button[ion-item] {
      padding-left: 0;

      .item-inner {
        margin-left: 0 !important;
      }
    }
  }

  .ion-tags-input-container {
    ion-label {
      font-size: 13px;
    }
  }
}

.evan-tag-container {
  display: flex;
  flex-wrap: wrap;

  & > span {
    line-height: 30px;

    margin-right: 5px;

    vertical-align: middle;
  }
}

.evan-tag {
  line-height: 30px;

  position: relative;

  width: auto;
  height: 30px;
  margin-right: 10px;
  margin-bottom: 8px;
  padding: 0 30px 0 12px;
  border-radius: 20px;

  &.disable-delete {
    padding: 0 12px 0 12px;
  }


  ion-icon {
    position: absolute;
    top: 7px;
    right: 13px;

    cursor: pointer;
  }
}

ion-item, button[ion-item] {
  padding-left: 0;
}

.input-error {
  font-size: 12px;

  display: block;

  text-align: left;

  opacity: 0.8;
}

.input-hint {
  font-size: 12px;

  display: block;

  text-align: justify;

  opacity: 0.8;

  &.checkbox-hint {
    margin-top: 8px;
    padding-left: 70px;
  }
}

ion-tags-input {
  &, * {
    font-size: 25px;
  }

  .ion-tags-input {
    padding: 0;
    padding-bottom: 8px;

    input.iti-input {
      font-size: 17px;

      height: 34px;
      padding: 0;

      vertical-align: bottom;
    }

    span.iti-tag {
      line-height: 24px;

      position: relative;

      height: 30px;
      margin-right: 10px;
      padding-right: 30px;

      vertical-align: middle;

      border-radius: 20px !important;

      .iti-tag-rm {
        font-size: 20px;

        position: absolute;
        top: 2px;
        right: 11px;
      }
    }
  }

  &[readonly] {
    .ion-tags-input {
      span.iti-tag {
        display: inline-block;
        float: none;
      }

      span:last-child {
        margin-right: 0;
      }
    }
  }
}

.focus-outline:focus, .focus-outline :focus {
  outline: none !important;
}

ion-item.item, button[ion-item] {
  ion-input {
    .input-cover {
      display: none !important;
    }
  }

  ion-checkbox {
    margin: 0 25px 0 0 !important;

    .checkbox-icon {
      width: 20px;
      height: 20px;

      &.checkbox-checked {
        .checkbox-inner {
          top: 3px;
          left: 7px;
        }
      }
    }
  }
}


ion-item.item.no-border {
  .item-inner {
    border-bottom: 0 !important;
  }
}

ion-list[radio-group] {
  ion-radio {
    order: 1;
  }

  .input-wrapper {
    order: 2;
  }
}

.group-icon-form {
  ion-item, button[ion-item] {
    &.label-left {
      padding-left: 50px !important;

      ion-label {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 10px;
      }
    }
  }
}

input[type=number] {
  -moz-appearance: textfield;
       appearance: textfield;
}

input[type=number]::-webkit-inner-spin-button, input[type=number]::-webkit-outer-spin-button {
  -webkit-appearance: none;
}

ion-chip.error-hint {
  max-width: 100%;

  border-radius: 0;
}

ion-chip.warning-hint {
  max-width: 100%;

  border-radius: 0;
}

/* color theme dark */
h1, h2, h3, h4, h5, span, p {
  color: $light;
}

ion-label {
  &, h1, h2, h3, h4, h5, span {
    color: $light !important;
  }
}

::placeholder, ::-webkit-input-placeholder, ::-moz-placeholder, :-ms-input-placeholder, :-moz-placeholder {
  color: $medium-blue !important;
}

ion-item, button[ion-item] {
  ion-input, ion-select {
    *, .select-text {
      color: $light-gray;
    }
  }

  ion-datetime {
    .datetime-text {
      color: $light-gray;
    }
  }

  &.item-md.item-block .item-inner {
    border-bottom: 1px solid #3c7f80;
    border-bottom-color: #3c7f80;
    box-shadow: none !important;
  }
}

form {
  & ion-item.item-md, & button[ion-item] {
    background-color: $list-background-color;
  }

  ion-list {
    ion-item.item-md, button[ion-item] {
      background-color: transparent !important;
    }
  }

  .ion-tags-input-container {
    ion-label {
      color: #999999;
    }
  }
}

.evan-tag-container {
  border-bottom: 1px solid $light-gray;

  & > span {
    color: $medium-gray;
  }
}

.evan-tag {
  color: $light;
  border-radius: 20px;
  background-color: $medium-blue;

  span {
    color: $light !important;
  }

  ion-icon {
    &:hover {
      color: $light-gray;
    }
  }
}

.input-error {
  color: $red;
}

ion-tags-input {
  .ion-tags-input {
    border-bottom: 1px solid $background-color-2;

    &.active.tit-border-color {
      border-bottom-color: $background-color-2;
    }

    input.iti-input {
      color: $light;

      &::-webkit-input-placeholder, &::-moz-placeholder, &:-ms-input-placeholder, &:-moz-placeholder {
        color: #999999;
      }
    }

    span.iti-tag {
      border-radius: 20px !important;
      background-color: #24545e;
    }
  }
}

ion-item.item, button[ion-item] {
  ion-checkbox {
    .checkbox-icon {
      border: 0;
      background-color: $background-color;

      &.checkbox-checked {
        background-color: $green;
      }
    }
  }
}

ion-item.item.bordered, button[ion-item].bordered {
  border: 2px solid $border-color;

  .item-inner {
    border-bottom-color: transparent !important;
    box-shadow: none !important;
  }
}

ion-item.item.semi-transparent {
  background: rgba($background-color, $background-opacity);
}

ion-item.item.no-border {
  .item-inner {
    border-bottom: 0 !important;
  }
}

.group-icon-form {
  ion-item, button[ion-item] {
    &.label-left {
      ion-label {
        &, & * {
          color: $primary;
        }
      }
    }
  }
}


.evan-dapp {
  .picker-md .picker-wrapper {
    background: $background-color;
  }
}

ion-chip.error-hint {
  border-radius: 0;
  background-color: rgba(map-get($colors, danger), 0.5);

  ion-icon {
    background-color: transparent !important;
  }
}

ion-chip.warning-hint {
  border-radius: 0;
  background-color: rgba($yellow, 0.5);

  ion-icon {
    background-color: transparent !important;
  }
}

/* color theme light */
.evan-light {
  h1, h2, h3, h4, h5, span, p {
    color: $light;
  }

  ion-label {
    &, h1, h2, h3, h4, h5, span {
      color: $light !important;
    }
  }

  ::placeholder, ::-webkit-input-placeholder, ::-moz-placeholder, :-ms-input-placeholder, :-moz-placeholder {
    color: $medium-blue !important;
  }

  ion-item, button[ion-item] {
    ion-input, ion-select {
      * {
        color: $light-gray;
      }
    }

    ion-datetime {
      .datetime-text {
        color: $light-gray;
      }
    }

    &.item-md.item-block .item-inner {
      border-bottom: 1px solid #3c7f80;
      border-bottom-color: #3c7f80;
      box-shadow: none !important;
    }
  }

  form {
    & ion-item.item-md, & button[ion-item] {
      background-color: $list-background-color;
    }

    ion-list {
      ion-item.item-md, button[ion-item] {
        background-color: transparent !important;
      }
    }

    .ion-tags-input-container {
      ion-label {
        color: #999999;
      }
    }
  }

  .evan-tag-container {
    border-bottom: 1px solid $light-gray;

    & > span {
      color: $medium-gray;
    }
  }

  .evan-tag {
    color: $light;
    border-radius: 20px;
    background-color: $medium-blue;

    span {
      color: $light !important;
    }

    ion-icon {
      &:hover {
        color: $light-gray;
      }
    }
  }

  .input-error {
    color: $red;
  }

  ion-tags-input {
    .ion-tags-input {
      border-bottom: 1px solid $background-color-2;

      &.active.tit-border-color {
        border-bottom-color: $background-color-2;
      }

      input.iti-input {
        color: $light;

        &::-webkit-input-placeholder, &::-moz-placeholder, &:-ms-input-placeholder, &:-moz-placeholder {
          color: #999999;
        }
      }

      span.iti-tag {
        border-radius: 20px !important;
        background-color: #24545e;
      }
    }
  }

  ion-item.item, button[ion-item] {
    ion-checkbox {
      .checkbox-icon {
        border: 0;
        background-color: $background-color;

        &.checkbox-checked {
          background-color: $green;
        }
      }
    }
  }

  ion-item.item.bordered, button[ion-item].bordered {
    border: 2px solid $border-color;

    .item-inner {
      border-bottom-color: transparent !important;
      box-shadow: none !important;
    }
  }

  ion-item.item.semi-transparent {
    background: rgba($background-color, $background-opacity);
  }

  ion-item.item.no-border {
    .item-inner {
      border-bottom: 0 !important;
    }
  }

  .group-icon-form {
    ion-item, button[ion-item] {
      &.label-left {
        ion-label {
          &, & * {
            color: $primary;
          }
        }
      }
    }
  }


  .evan-dapp {
    .picker-md .picker-wrapper {
      background: $background-color;
    }
  }

  ion-chip.error-hint {
    border-radius: 0;
    background-color: rgba(map-get($colors, danger), 0.5);

    ion-icon {
      background-color: transparent !important;
    }
  }

  ion-chip.warning-hint {
    border-radius: 0;
    background-color: rgba($yellow, 0.5);

    ion-icon {
      background-color: transparent !important;
    }
  }
}
